version: '3.8'

services:

  nginx:
    container_name: ${NAMESPACE}_nginx
    image: osioaliu/nginx-pagespeed:mage_2
    working_dir: /home/${USER}/html
    depends_on:
      - php
      - redis_pagespeed
    ports:
      - ${WEBSERVER_SECURE_PORT}:443
      - ${WEBSERVER_UNSECURE_PORT}:80
    environment:
      USER: ${USER}
      AUTH_CONFIG: ${AUTH_CONFIG}
      AUTH_USER: ${AUTH_USER}
      AUTH_PASS: ${AUTH_PASS}
      SHOPURI: ${SHOPURI}
      TZ: ${TZ}
      WORKDIR_SERVER: /home/${USER}/html
      SSL: ${SSL}
    entrypoint: ["docker-entrypoint.sh"]
    volumes:
      - app_data:/home/${USER}/html:ro
      - php_socket:/var/run/php

  php:
    container_name: ${NAMESPACE}_php
    image: osioaliu/php:${PHP_VERSION_SET}-fpm-alpine
    sysctls:
      net.core.somaxconn: 65536
    working_dir: /home/${USER}/html
    links:
      - db
    depends_on:
      - db
      - redis
      - elasticsearch
    environment:
      USER: $USER
      TZ: ${TZ}
      WORKDIR_SERVER: /home/${USER}/html
      XDEBUG_ENABLE: ${XDEBUG_ENABLE}
      XDEBUG_PROFILER: ${XDEBUG_PROFILER}
      XDEBUG_KEY: ${XDEBUG_KEY}
      COMPOSER_CACHE_DIR: /home/${USER}/.composer
    entrypoint: ["docker-entrypoint.sh"]
    volumes:
      - redis_data_socket:/var/run/redis
      - app_data:/home/${USER}/html:delegated
      - php_socket:/var/run/php
      - db_socket:/var/run/mysqld
      - composer_cache:/home/${USER}/.composer:delegated
      - ssh_keys:/home/${USER}/.ssh:delegated

  db:
    container_name: ${NAMESPACE}_db
    image: osioaliu/mariadb:${MARIADB_VERSION}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    healthcheck:
      test: mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD -e 'SHOW DATABASES;'
      interval: 3s
      timeout: 1s
      retries: 5
    volumes:
      - db_data:/var/lib/mysql/
      - db_socket:/var/run/mysqld
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d

  redis:
    container_name: ${NAMESPACE}_redis
    image: redis:alpine
    sysctls:
      net.core.somaxconn: '1024'
    entrypoint: redis-server
    command: ["/etc/redis/redis.conf", "--appendonly", "yes"]
    volumes:
      - redis_data_socket:/var/run/redis
      - redis_data:/data
      - ./.docker/redis/conf/redis.conf:/etc/redis/redis.conf

  redis_pagespeed:
    container_name: ${NAMESPACE}_redis_pagespeed
    image: redis:alpine
    sysctls:
      net.core.somaxconn: '1024'
    volumes:
      - redis_pagespeed_data:/var/run/redis

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_EXTERNAL_PORT}:8025

  elasticsearch:
    container_name: ${NAMESPACE}_elasticsearch
    image: osioaliu/elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  watchtower:
    container_name: ${NAMESPACE}_watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 900

volumes:
  php_socket:
  redis_data_socket:
  db_socket:
  db_data:
  elastic_data:
  redis_pagespeed_data:
  redis_data:
  ssh_keys:
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/.ssh
  composer_cache:
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/.composer
  app_data:
    driver_opts:
      type: none
      o: bind
      device: ${WORKDIR}